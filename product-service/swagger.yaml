# product-service/swagger.yaml
openapi: 3.0.0
info:
  title: Product Service
  description: Product Service API for AWS Shop backend services
  version: 1.0.0

servers:
  - url: https://88fi19k4tg.execute-api.eu-west-3.amazonaws.com/dev
    description: Development server

tags:
  - name: Products
    description: Product management endpoints

paths:
  /products:
    get:
      tags:
        - Products
      summary: Get all products
      description: Returns a list of all available products
      operationId: getProductList
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - Products
      summary: Create a new product
      description: Creates a new product with the provided details
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
                - price
                - count
              properties:
                title:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  minimum: 0
                count:
                  type: integer
                  minimum: 0
      responses:
        "201":
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /products/{productId}:
    get:
      tags:
        - Products
      summary: Get product by ID
      description: Returns a single product by its ID
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          description: ID of the product to retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Product:
      type: object
      required:
        - id
        - title
        - price
        - count
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
          minimum: 0
        count:
          type: integer
          minimum: 0
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: "Internal server error"
          description: Error message describing what went wrong

  securitySchemes:
    # For future use with authorization service
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
# Global security requirements - uncomment when authorization is implemented
# security:
#   - bearerAuth: []
